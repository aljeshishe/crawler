app: ${self:parent.app}
org: ${self:parent.org}
service: collector
useDotenv: true
frameworkVersion: ${self:parent.frameworkVersion}

parent: ${file(../serverless.common.yml):parent}
# custom:
#  IMAGE_NAME: ${self:app}-${self:service}
#  LOCAL_IMAGE: ${self:custom.IMAGE_NAME}:latest
#  REMOTE_IMAGE: ${self:parent.AWS_ACCOUNT}.dkr.ecr.${self:parent.AWS_REGION}.amazonaws.com/${self:custom.LOCAL_IMAGE}

provider:
  name: aws
  runtime: python3.9
  stage: ${self:parent.stage}
  region: ${self:parent.region}
  timeout: 900
  memorySize: 1024
  deploymentMethod: direct
  stackName: ${self:parent.stackName}
  deploymentPrefix: ${self:parent.deploymentPrefix}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource: "*"
  ecr:
    images:
      latest:
        uri: ${self:parent.REMOTE_IMAGE}
functions:
  function:
    image: latest
    events:
      - schedule: cron(0 12 * * ? *)
    environment:
        AWS_S3_BUCKET: ${self:parent.AWS_S3_BUCKET}


plugins:
  - serverless-offline
